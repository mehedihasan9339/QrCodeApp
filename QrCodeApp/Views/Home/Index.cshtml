@{
    ViewData["Title"] = "QR Code Generator";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QR Code Generator</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f9f9f9;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
        }

        .form-container {
            margin-bottom: 20px;
        }

        .qr-result-container {
            text-align: center;
            margin-top: 20px;
            opacity: 0; /* Initial state for fade-in effect */
            transition: opacity 0.5s ease; /* Transition for fade-in effect */
        }

        .qr-card {
            margin: 10px;
            text-align: center;
        }

            .qr-card img {
                width: 80px; /* Size for recent QR codes */
                height: 80px;
                opacity: 0; /* Initial state for fade-in effect */
                transition: opacity 0.5s ease; /* Transition for fade-in effect */
            }

        h1, h2 {
            color: #343a40; /* Dark gray color for professional look */
        }

        .recent-qr-heading {
            display: none; /* Initially hidden */
        }
    </style>
</head>
<body>
    <div class="row">
        <div class="col-md-12 left">
            <div class="form-container">
                <h1 class="text-center">QR Code Generator</h1>
                <p class="text-center">Select a QR code type and fill in the details to generate your custom QR code.</p>
                <form id="qrForm" class="mb-4">
                    <div class="form-group">
                        <label for="qrType">QR Code Type</label>
                        <select id="qrType" class="form-control" required>
                            <option value="url">URL</option>
                            <option value="vcard">vCard</option>
                            <option value="wifi">Wi-Fi</option>
                        </select>
                    </div>

                    <div id="dynamicInputFields"></div>

                    <div class="form-group">
                        <label for="color">QR Code Color</label>
                        <input type="color" id="color" class="form-control" value="#000000">
                    </div>

                    <button type="button" onClick="GenerateQR()" class="btn btn-primary btn-block">Generate</button>
                </form>
            </div>
        </div>

        <div class="col-md-12 right">
            <div class="qr-result-container" id="qrResultContainer">
                <h2>Your QR Code</h2>
                <img id="qrImage" src="~/images/scanner.png" alt="Your QR Code" />
            </div>

            <h2 class="recent-qr-heading text-center mt-4" style="font-size: 20px;">Recently Generated QR Codes</h2>
            <div id="recentQRs" class="d-flex justify-content-center flex-wrap">
                <!-- QR codes will be displayed here -->
            </div>
        </div>

        <div class="col-md-12">
            <p style="text-align: center;">Copyright &copy; <b>Mehedi Hasan</b></p>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
    <script>
        function GenerateQR() {
            const qrTypeValue = $('#qrType').val();
            const color = $('#color').val();
            let requestData = { type: qrTypeValue, color: color };

            if (qrTypeValue === 'url') {
                requestData.url = $('#url').val();
            } else if (qrTypeValue === 'vcard') {
                requestData.name = $('#name').val();
                requestData.phone = $('#phone').val();
                requestData.email = $('#email').val();
                requestData.web = $('#web').val();
                requestData.address = $('#address').val();
                requestData.dob = $('#dob').val();
            } else if (qrTypeValue === 'wifi') {
                requestData.ssid = $('#ssid').val();
                requestData.key = $('#key').val();
            }

            const uniqueId = getUniqueId();
            const currentDate = new Date().toISOString().split('T')[0];
            requestData.filename = `${uniqueId}_${currentDate}.png`;

            $.ajax({
                url: '/api/GenerateQR',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(requestData),
                processData: false,
                xhrFields: {
                    responseType: 'blob'
                },
                success: function (blob) {
                    const qrImage = document.getElementById('qrImage');
                    const url = URL.createObjectURL(blob);
                    qrImage.src = url;

                    $('.left').removeClass('col-md-12').addClass('col-md-6');
                    $('.right').removeClass('col-md-12').addClass('col-md-6');
                    // Fade in effect for the generated QR code
                    $('#qrResultContainer').css('opacity', '1');

                    // Save the generated QR code in the recent QR codes area
                    saveRecentQR(url);
                },
                error: function (xhr, status, error) {
                    console.error('Error in generating QR code:', error);
                }
            });
        }

        function getUniqueId() {
            let uniqueId = localStorage.getItem('uniqueId');
            if (!uniqueId) {
                uniqueId = 'id_' + Math.random().toString(36).substr(2, 9);
                localStorage.setItem('uniqueId', uniqueId);
            }
            return uniqueId;
        }

        function saveRecentQR(imageUrl) {
            const recentQRs = document.getElementById('recentQRs');
            const qrCard = document.createElement('div');
            qrCard.classList.add('qr-card', 'col-2', 'text-center'); // Responsive cards

            const qrImage = document.createElement('img');
            qrImage.src = imageUrl;
            qrImage.alt = "QR Code";
            qrImage.style.opacity = '1'; // Set opacity for fade-in

            qrCard.appendChild(qrImage);
            recentQRs.appendChild(qrCard);

            // Show the heading only if there are QR codes
            document.querySelector('.recent-qr-heading').style.display = 'block';

            // Limit to last 5 QR codes
            if (recentQRs.children.length > 5) {
                recentQRs.removeChild(recentQRs.firstChild);
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const qrType = document.getElementById('qrType');
            const dynamicInputFields = document.getElementById('dynamicInputFields');

            const updateInputFields = (type) => {
                let fieldsHTML = '';

                if (type === 'url') {
                    fieldsHTML = `
                                        <div class="form-group">
                                            <label for="url">Enter URL</label>
                                            <input type="url" id="url" class="form-control" required placeholder="Enter your URL">
                                        </div>`;
                } else if (type === 'vcard') {
                    fieldsHTML = `
                                        <div class="form-group">
                                            <label for="name">Name</label>
                                            <input type="text" id="name" class="form-control" required placeholder="Enter your name">
                                        </div>
                                        <div class="form-group">
                                            <label for="phone">Phone</label>
                                            <input type="tel" id="phone" class="form-control" required placeholder="Enter your phone number">
                                        </div>
                                        <div class="form-group">
                                            <label for="email">Email</label>
                                            <input type="email" id="email" class="form-control" required placeholder="Enter your email">
                                        </div>
                                        <div class="form-group">
                                            <label for="web">Website</label>
                                            <input type="url" id="web" class="form-control" placeholder="Enter your website">
                                        </div>
                                        <div class="form-group">
                                            <label for="address">Address</label>
                                            <input type="text" id="address" class="form-control" placeholder="Enter your address">
                                        </div>
                                        <div class="form-group">
                                            <label for="dob">Date of Birth</label>
                                            <input type="date" id="dob" class="form-control">
                                        </div>`;
                } else if (type === 'wifi') {
                    fieldsHTML = `
                                        <div class="form-group">
                                            <label for="ssid">Network Name (SSID)</label>
                                            <input type="text" id="ssid" class="form-control" required placeholder="Enter network name">
                                        </div>
                                        <div class="form-group">
                                            <label for="key">Network Key</label>
                                            <input type="password" id="key" class="form-control" required placeholder="Enter network key">
                                        </div>`;
                }

                dynamicInputFields.innerHTML = fieldsHTML;
            };

            // Update fields based on initial type
            updateInputFields(qrType.value);

            // Listen for changes in QR code type
            qrType.addEventListener('change', function () {
                updateInputFields(this.value);
            });
        });
    </script>
</body>
</html>
